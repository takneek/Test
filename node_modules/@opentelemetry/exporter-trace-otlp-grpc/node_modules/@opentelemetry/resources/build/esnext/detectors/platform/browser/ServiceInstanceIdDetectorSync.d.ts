
import type { NextRequest } from 'next/server';
import { NextResponse } from 'next/server';

const AUTH_COOKIE_NAME = "swiftcart-auth-token";
const PROTECTED_APP_PATHS = [
  '/dashboard', 
  '/products', // Keep existing /products as protected
  '/admin', 
  '/about', 
  '/checkout', 
  '/settings', 
  '/orders', // Main orders page
  '/expenses',
  // Note: /admin/products is covered by /admin
  '/points',
  '/request',
  '/download-log'
];
const LOGIN_PATH = '/login';

export function middleware(request: NextRequest) {
  const { pathname } = request.nextUrl;
  const authToken = request.cookies.get(AUTH_COOKIE_NAME);

  const isAppPath = PROTECTED_APP_PATHS.some(p => pathname.startsWith(p));

  // If trying to access a protected app path without an auth token, redirect to login
  if (isAppPath && !authToken) {
    const loginUrl = new URL(LOGIN_PATH, request.url);
    loginUrl.searchParams.set('redirect', pathname); // Optional: add redirect query param
    return NextResponse.redirect(loginUrl);
  }

  // If trying to access login page with an auth token, redirect to dashboard
  if (pathname === LOGIN_PATH && authToken) {
    return NextResponse.redirect(new URL('/dashboard', request.url));
  }

  return NextResponse.next();
}

export const config = {
  matcher: [
    // Match all routes except for static assets, API routes, and the landing page
    '/((?!api|_next/static|_next/image|favicon.ico|.*\\..*).*)',
    // Explicitly include root for landing page (which does not need auth)
    // but exclude it from general protection logic if it's not in PROTECTED_APP_PATHS
  ],
};
