{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/product-suggestions.ts"],"sourcesContent":["// This is an AI-powered product suggestion agent.\n//\n// - `suggestProducts` - A function that suggests related products or upsells based on an item.\n// - `ProductSuggestionInput` - The input type for the suggestProducts function.\n// - `ProductSuggestionOutput` - The return type for the suggestProducts function.\n\n'use server';\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst ProductSuggestionInputSchema = z.object({\n  productDescription: z\n    .string()\n    .describe('The description of the product currently being viewed.'),\n  productCatalog: z\n    .string()\n    .describe('A list of available products with their descriptions.'),\n});\nexport type ProductSuggestionInput = z.infer<typeof ProductSuggestionInputSchema>;\n\nconst ProductSuggestionOutputSchema = z.object({\n  suggestions: z\n    .array(z.string())\n    .describe('A list of suggested products or upsells based on the product description.'),\n});\nexport type ProductSuggestionOutput = z.infer<typeof ProductSuggestionOutputSchema>;\n\nexport async function suggestProducts(input: ProductSuggestionInput): Promise<ProductSuggestionOutput> {\n  return suggestProductsFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'productSuggestionPrompt',\n  input: {schema: ProductSuggestionInputSchema},\n  output: {schema: ProductSuggestionOutputSchema},\n  prompt: `You are an expert product recommendation specialist.\n\nYou will be given a description of the product currently being viewed by the user, and a catalog of available products.\n\nBased on the product description, you will suggest related products or upsells from the catalog.\n\nProduct Description: {{{productDescription}}}\nProduct Catalog: {{{productCatalog}}}\n\nSuggestions:`,\n});\n\nconst suggestProductsFlow = ai.defineFlow(\n  {\n    name: 'suggestProductsFlow',\n    inputSchema: ProductSuggestionInputSchema,\n    outputSchema: ProductSuggestionOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":"AAAA,kDAAkD;AAClD,EAAE;AACF,+FAA+F;AAC/F,gFAAgF;AAChF,kFAAkF;;;;;;IAwB5D","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,6LAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/core/product-suggestions.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useEffect, useState } from 'react';\nimport { suggestProducts, type ProductSuggestionInput, type ProductSuggestionOutput } from '@/ai/flows/product-suggestions';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\nimport { Loader2, Lightbulb } from 'lucide-react';\nimport Link from 'next/link';\nimport { PRODUCTS_CATALOG } from '@/lib/constants'; // To find product links\n\ninterface ProductSuggestionsProps {\n  currentProductDescription: string;\n  currentProductId: string;\n  productCatalogString: string;\n}\n\nexport function ProductSuggestions({ currentProductDescription, currentProductId, productCatalogString }: ProductSuggestionsProps) {\n  const [suggestions, setSuggestions] = useState<string[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    async function fetchSuggestions() {\n      setIsLoading(true);\n      setError(null);\n      try {\n        const input: ProductSuggestionInput = {\n          productDescription: currentProductDescription,\n          productCatalog: productCatalogString,\n        };\n        const result: ProductSuggestionOutput = await suggestProducts(input);\n        // Filter out the current product from suggestions if present\n        const filteredSuggestions = result.suggestions.filter(\n          name => !name.toLowerCase().includes(\n            PRODUCTS_CATALOG.find(p => p.id === currentProductId)?.name.toLowerCase() ?? ' imposible name '\n          )\n        );\n        setSuggestions(filteredSuggestions.slice(0, 3)); // Limit to 3 suggestions\n      } catch (err) {\n        console.error(\"Error fetching product suggestions:\", err);\n        setError(\"Failed to load suggestions. Please try again later.\");\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    fetchSuggestions();\n  }, [currentProductDescription, productCatalogString, currentProductId]);\n\n  if (isLoading) {\n    return (\n      <Card className=\"mt-8 shadow-md\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center\">\n            <Lightbulb className=\"mr-2 h-5 w-5 text-primary\" />\n            You Might Also Like\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"flex items-center justify-center p-6\">\n          <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n          <p className=\"ml-2 text-muted-foreground\">Loading suggestions...</p>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (error) {\n    return (\n      <Alert variant=\"destructive\" className=\"mt-8\">\n        <AlertTitle>Error</AlertTitle>\n        <AlertDescription>{error}</AlertDescription>\n      </Alert>\n    );\n  }\n\n  if (suggestions.length === 0) {\n    return null; // Don't show the card if there are no suggestions or only the current product was suggested\n  }\n  \n  const findProductByName = (name: string) => {\n    // This is a naive search, might need improvement for more complex names\n    return PRODUCTS_CATALOG.find(p => name.toLowerCase().includes(p.name.toLowerCase()));\n  };\n\n  return (\n    <Card className=\"mt-8 shadow-md\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center\">\n          <Lightbulb className=\"mr-2 h-5 w-5 text-primary\" />\n          You Might Also Like\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        {suggestions.length > 0 ? (\n          <ul className=\"space-y-3\">\n            {suggestions.map((suggestionName, index) => {\n              const suggestedProduct = findProductByName(suggestionName);\n              if (suggestedProduct && suggestedProduct.id !== currentProductId) {\n                return (\n                  <li key={index}>\n                    <Link href={`/products/${suggestedProduct.id}`} className=\"group block rounded-md p-3 hover:bg-muted/50 transition-colors\">\n                        <h4 className=\"font-medium text-foreground group-hover:text-primary\">{suggestedProduct.name}</h4>\n                        <p className=\"text-sm text-muted-foreground line-clamp-1\">${suggestedProduct.price.toFixed(2)} - {suggestedProduct.category}</p>\n                    </Link>\n                  </li>\n                );\n              }\n              // If product not found or it's the current product, display name as text\n              return (\n                <li key={index} className=\"p-3\">\n                  <p className=\"text-foreground\">{suggestionName} (Details unavailable)</p>\n                </li>\n              );\n            })}\n          </ul>\n        ) : (\n          <p className=\"text-muted-foreground\">No other suggestions available at the moment.</p>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}