{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/chart.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 445, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/dashboard/page.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\nimport { Users, DollarSign, ShoppingBag, Activity } from \"lucide-react\";\nimport { ChartContainer, ChartTooltip, ChartTooltipContent, ChartLegend, ChartLegendContent } from \"@/components/ui/chart\";\nimport { Bar, BarChart, Pie, PieChart, ResponsiveContainer, CartesianGrid, XAxis, YAxis, Tooltip as RechartsTooltip } from \"recharts\";\n\n// categoryData needs to use hsl() for recharts compatibility\nconst categoryData = [\n  { name: \"Electronics\", value: 400, fill: \"hsl(var(--chart-1))\" },\n  { name: \"Apparel\", value: 300, fill: \"hsl(var(--chart-2))\" },\n  { name: \"Home Goods\", value: 300, fill: \"hsl(var(--chart-3))\" },\n  { name: \"Books\", value: 200, fill: \"hsl(var(--chart-4))\" },\n];\n\nconst chartConfig = {\n  sales: { label: \"Sales\", color: \"hsl(var(--primary))\" },\n  Electronics: { label: \"Electronics\", color: \"hsl(var(--chart-1))\" },\n  Apparel: { label: \"Apparel\", color: \"hsl(var(--chart-2))\" },\n  \"Home Goods\": { label: \"Home Goods\", color: \"hsl(var(--chart-3))\" },\n  Books: { label: \"Books\", color: \"hsl(var(--chart-4))\" },\n};\n\ninterface SalesDataPoint {\n  month: string;\n  sales: number;\n}\n\ninterface SummaryStats {\n  totalRevenue: string;\n  revenueChange: string;\n  newCustomers: string;\n  customerChange: string;\n  salesCount: string;\n  salesChange: string;\n  activeNow: string;\n  activeChange: string;\n}\n\nexport default function DashboardPage() {\n  const [salesData, setSalesData] = useState<SalesDataPoint[]>([]);\n  const [summaryStats, setSummaryStats] = useState<SummaryStats | null>(null);\n\n  useEffect(() => {\n    // Generate sales data on the client\n    const generatedSalesData = [\n      { month: \"Jan\", sales: Math.floor(Math.random() * 4000) + 1000 },\n      { month: \"Feb\", sales: Math.floor(Math.random() * 4000) + 1000 },\n      { month: \"Mar\", sales: Math.floor(Math.random() * 4000) + 1000 },\n      { month: \"Apr\", sales: Math.floor(Math.random() * 4000) + 1000 },\n      { month: \"May\", sales: Math.floor(Math.random() * 4000) + 1000 },\n      { month: \"Jun\", sales: Math.floor(Math.random() * 4000) + 1000 },\n    ];\n    setSalesData(generatedSalesData);\n\n    // Generate summary stats on the client\n    setSummaryStats({\n      totalRevenue: `$${(Math.random() * 50000 + 20000).toFixed(2)}`,\n      revenueChange: `+${(Math.random() * 25 + 5).toFixed(1)}% from last month`,\n      newCustomers: `+${Math.floor(Math.random() * 2000 + 500)}`,\n      customerChange: `+${(Math.random() * 200 + 50).toFixed(1)}% from last month`,\n      salesCount: `+${Math.floor(Math.random() * 10000 + 2000)}`,\n      salesChange: `+${(Math.random() * 20 + 10).toFixed(1)}% from last month`,\n      activeNow: `+${Math.floor(Math.random() * 500 + 100)}`,\n      activeChange: `+${Math.floor(Math.random() * 200 + 50)} since last hour`,\n    });\n  }, []);\n\n  return (\n    <div className=\"space-y-8\">\n      <h1 className=\"text-3xl font-bold text-foreground\">Dashboard</h1>\n      \n      <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-4\">\n        <Card className=\"shadow-md\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Revenue</CardTitle>\n            <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{summaryStats?.totalRevenue || <Skeleton className=\"h-8 w-3/4\" />}</div>\n            <div className=\"text-xs text-muted-foreground\">{summaryStats?.revenueChange || <Skeleton className=\"h-4 w-1/2\" />}</div>\n          </CardContent>\n        </Card>\n        <Card className=\"shadow-md\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">New Customers</CardTitle>\n            <Users className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{summaryStats?.newCustomers || <Skeleton className=\"h-8 w-1/2\" />}</div>\n            <div className=\"text-xs text-muted-foreground\">{summaryStats?.customerChange || <Skeleton className=\"h-4 w-3/4\" />}</div>\n          </CardContent>\n        </Card>\n        <Card className=\"shadow-md\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Sales</CardTitle>\n            <ShoppingBag className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{summaryStats?.salesCount || <Skeleton className=\"h-8 w-1/2\" />}</div>\n            <div className=\"text-xs text-muted-foreground\">{summaryStats?.salesChange || <Skeleton className=\"h-4 w-1/2\" />}</div>\n          </CardContent>\n        </Card>\n        <Card className=\"shadow-md\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Active Now</CardTitle>\n            <Activity className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{summaryStats?.activeNow || <Skeleton className=\"h-8 w-1/4\" />}</div>\n            <div className=\"text-xs text-muted-foreground\">{summaryStats?.activeChange || <Skeleton className=\"h-4 w-3/4\" />}</div>\n          </CardContent>\n        </Card>\n      </div>\n\n      <div className=\"grid gap-6 md:grid-cols-2\">\n        <Card className=\"shadow-md\">\n          <CardHeader>\n            <CardTitle>Sales Overview</CardTitle>\n            <CardDescription>Monthly sales performance.</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <ChartContainer config={chartConfig} className=\"h-[300px] w-full\">\n              {salesData.length > 0 ? (\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                  <BarChart data={salesData} margin={{ top: 5, right: 20, left: 0, bottom: 5 }}>\n                    <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n                    <XAxis dataKey=\"month\" tickLine={false} axisLine={false} tickMargin={8} />\n                    <YAxis tickLine={false} axisLine={false} tickMargin={8} />\n                    <RechartsTooltip \n                      cursor={{ fill: 'hsl(var(--muted))' }}\n                      content={<ChartTooltipContent indicator=\"dot\" />} \n                    />\n                    <Bar dataKey=\"sales\" fill=\"hsl(var(--primary))\" radius={[4, 4, 0, 0]} />\n                  </BarChart>\n                </ResponsiveContainer>\n              ) : (\n                 <div className=\"flex items-center justify-center h-full\">\n                   <Skeleton className=\"h-full w-full\" />\n                 </div>\n              )}\n            </ChartContainer>\n          </CardContent>\n        </Card>\n        <Card className=\"shadow-md\">\n          <CardHeader>\n            <CardTitle>Sales by Category</CardTitle>\n            <CardDescription>Distribution of sales across product categories.</CardDescription>\n          </CardHeader>\n          <CardContent className=\"flex items-center justify-center\">\n             <ChartContainer config={chartConfig} className=\"h-[300px] w-full\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <PieChart>\n                  <RechartsTooltip \n                    cursor={{ fill: 'hsl(var(--muted))' }}\n                    content={<ChartTooltipContent indicator=\"dot\" nameKey=\"name\" />} \n                  />\n                  <Pie\n                    data={categoryData}\n                    dataKey=\"value\"\n                    nameKey=\"name\"\n                    cx=\"50%\"\n                    cy=\"50%\"\n                    outerRadius={100}\n                    labelLine={false}\n                    label={({ cx, cy, midAngle, innerRadius, outerRadius, percent, name }) => {\n                        const RADIAN = Math.PI / 180;\n                        // Position the label slightly outside the segment for better readability if segments are small\n                        const radius = outerRadius + 10; \n                        const x  = cx + radius * Math.cos(-midAngle * RADIAN);\n                        const y = cy  + radius * Math.sin(-midAngle * RADIAN);\n                        const textAnchor = x > cx ? 'start' : 'end';\n                        \n                        // Find the category label from chartConfig for consistent display\n                        const categoryLabel = chartConfig[name as keyof typeof chartConfig]?.label || name;\n\n                        return (\n                          <text x={x} y={y} fill=\"hsl(var(--foreground))\" textAnchor={textAnchor} dominantBaseline=\"central\" fontSize=\"12px\">\n                            {`${categoryLabel} ${(percent * 100).toFixed(0)}%`}\n                          </text>\n                        );\n                    }}\n                  />\n                  <ChartLegend content={<ChartLegendContent nameKey=\"name\" />} />\n                </PieChart>\n              </ResponsiveContainer>\n            </ChartContainer>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n\n// Simple Skeleton component for loading states\nconst Skeleton = ({ className }: { className?: string }) => (\n  <div className={`animate-pulse bg-muted rounded ${className}`} />\n);\n\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AANA;;;;;;AAQA,6DAA6D;AAC7D,MAAM,eAAe;IACnB;QAAE,MAAM;QAAe,OAAO;QAAK,MAAM;IAAsB;IAC/D;QAAE,MAAM;QAAW,OAAO;QAAK,MAAM;IAAsB;IAC3D;QAAE,MAAM;QAAc,OAAO;QAAK,MAAM;IAAsB;IAC9D;QAAE,MAAM;QAAS,OAAO;QAAK,MAAM;IAAsB;CAC1D;AAED,MAAM,cAAc;IAClB,OAAO;QAAE,OAAO;QAAS,OAAO;IAAsB;IACtD,aAAa;QAAE,OAAO;QAAe,OAAO;IAAsB;IAClE,SAAS;QAAE,OAAO;QAAW,OAAO;IAAsB;IAC1D,cAAc;QAAE,OAAO;QAAc,OAAO;IAAsB;IAClE,OAAO;QAAE,OAAO;QAAS,OAAO;IAAsB;AACxD;AAkBe,SAAS;;IACtB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAoB,EAAE;IAC/D,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAuB;IAEtE,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,oCAAoC;YACpC,MAAM,qBAAqB;gBACzB;oBAAE,OAAO;oBAAO,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,QAAQ;gBAAK;gBAC/D;oBAAE,OAAO;oBAAO,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,QAAQ;gBAAK;gBAC/D;oBAAE,OAAO;oBAAO,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,QAAQ;gBAAK;gBAC/D;oBAAE,OAAO;oBAAO,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,QAAQ;gBAAK;gBAC/D;oBAAE,OAAO;oBAAO,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,QAAQ;gBAAK;gBAC/D;oBAAE,OAAO;oBAAO,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,QAAQ;gBAAK;aAChE;YACD,aAAa;YAEb,uCAAuC;YACvC,gBAAgB;gBACd,cAAc,CAAC,CAAC,EAAE,CAAC,KAAK,MAAM,KAAK,QAAQ,KAAK,EAAE,OAAO,CAAC,IAAI;gBAC9D,eAAe,CAAC,CAAC,EAAE,CAAC,KAAK,MAAM,KAAK,KAAK,CAAC,EAAE,OAAO,CAAC,GAAG,iBAAiB,CAAC;gBACzE,cAAc,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,OAAO,MAAM;gBAC1D,gBAAgB,CAAC,CAAC,EAAE,CAAC,KAAK,MAAM,KAAK,MAAM,EAAE,EAAE,OAAO,CAAC,GAAG,iBAAiB,CAAC;gBAC5E,YAAY,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,QAAQ,OAAO;gBAC1D,aAAa,CAAC,CAAC,EAAE,CAAC,KAAK,MAAM,KAAK,KAAK,EAAE,EAAE,OAAO,CAAC,GAAG,iBAAiB,CAAC;gBACxE,WAAW,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,MAAM,MAAM;gBACtD,cAAc,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,MAAM,IAAI,gBAAgB,CAAC;YAC1E;QACF;kCAAG,EAAE;IAEL,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAAqC;;;;;;0BAEnD,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,mIAAA,CAAA,OAAI;wBAAC,WAAU;;0CACd,6LAAC,mIAAA,CAAA,aAAU;gCAAC,WAAU;;kDACpB,6LAAC,mIAAA,CAAA,YAAS;wCAAC,WAAU;kDAAsB;;;;;;kDAC3C,6LAAC,qNAAA,CAAA,aAAU;wCAAC,WAAU;;;;;;;;;;;;0CAExB,6LAAC,mIAAA,CAAA,cAAW;;kDACV,6LAAC;wCAAI,WAAU;kDAAsB,cAAc,8BAAgB,6LAAC;4CAAS,WAAU;;;;;;;;;;;kDACvF,6LAAC;wCAAI,WAAU;kDAAiC,cAAc,+BAAiB,6LAAC;4CAAS,WAAU;;;;;;;;;;;;;;;;;;;;;;;kCAGvG,6LAAC,mIAAA,CAAA,OAAI;wBAAC,WAAU;;0CACd,6LAAC,mIAAA,CAAA,aAAU;gCAAC,WAAU;;kDACpB,6LAAC,mIAAA,CAAA,YAAS;wCAAC,WAAU;kDAAsB;;;;;;kDAC3C,6LAAC,uMAAA,CAAA,QAAK;wCAAC,WAAU;;;;;;;;;;;;0CAEnB,6LAAC,mIAAA,CAAA,cAAW;;kDACV,6LAAC;wCAAI,WAAU;kDAAsB,cAAc,8BAAgB,6LAAC;4CAAS,WAAU;;;;;;;;;;;kDACvF,6LAAC;wCAAI,WAAU;kDAAiC,cAAc,gCAAkB,6LAAC;4CAAS,WAAU;;;;;;;;;;;;;;;;;;;;;;;kCAGxG,6LAAC,mIAAA,CAAA,OAAI;wBAAC,WAAU;;0CACd,6LAAC,mIAAA,CAAA,aAAU;gCAAC,WAAU;;kDACpB,6LAAC,mIAAA,CAAA,YAAS;wCAAC,WAAU;kDAAsB;;;;;;kDAC3C,6LAAC,uNAAA,CAAA,cAAW;wCAAC,WAAU;;;;;;;;;;;;0CAEzB,6LAAC,mIAAA,CAAA,cAAW;;kDACV,6LAAC;wCAAI,WAAU;kDAAsB,cAAc,4BAAc,6LAAC;4CAAS,WAAU;;;;;;;;;;;kDACrF,6LAAC;wCAAI,WAAU;kDAAiC,cAAc,6BAAe,6LAAC;4CAAS,WAAU;;;;;;;;;;;;;;;;;;;;;;;kCAGrG,6LAAC,mIAAA,CAAA,OAAI;wBAAC,WAAU;;0CACd,6LAAC,mIAAA,CAAA,aAAU;gCAAC,WAAU;;kDACpB,6LAAC,mIAAA,CAAA,YAAS;wCAAC,WAAU;kDAAsB;;;;;;kDAC3C,6LAAC,6MAAA,CAAA,WAAQ;wCAAC,WAAU;;;;;;;;;;;;0CAEtB,6LAAC,mIAAA,CAAA,cAAW;;kDACV,6LAAC;wCAAI,WAAU;kDAAsB,cAAc,2BAAa,6LAAC;4CAAS,WAAU;;;;;;;;;;;kDACpF,6LAAC;wCAAI,WAAU;kDAAiC,cAAc,8BAAgB,6LAAC;4CAAS,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAKxG,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,mIAAA,CAAA,OAAI;wBAAC,WAAU;;0CACd,6LAAC,mIAAA,CAAA,aAAU;;kDACT,6LAAC,mIAAA,CAAA,YAAS;kDAAC;;;;;;kDACX,6LAAC,mIAAA,CAAA,kBAAe;kDAAC;;;;;;;;;;;;0CAEnB,6LAAC,mIAAA,CAAA,cAAW;0CACV,cAAA,6LAAC,oIAAA,CAAA,iBAAc;oCAAC,QAAQ;oCAAa,WAAU;8CAC5C,UAAU,MAAM,GAAG,kBAClB,6LAAC,sKAAA,CAAA,sBAAmB;wCAAC,OAAM;wCAAO,QAAO;kDACvC,cAAA,6LAAC,uJAAA,CAAA,WAAQ;4CAAC,MAAM;4CAAW,QAAQ;gDAAE,KAAK;gDAAG,OAAO;gDAAI,MAAM;gDAAG,QAAQ;4CAAE;;8DACzE,6LAAC,gKAAA,CAAA,gBAAa;oDAAC,iBAAgB;oDAAM,UAAU;;;;;;8DAC/C,6LAAC,wJAAA,CAAA,QAAK;oDAAC,SAAQ;oDAAQ,UAAU;oDAAO,UAAU;oDAAO,YAAY;;;;;;8DACrE,6LAAC,wJAAA,CAAA,QAAK;oDAAC,UAAU;oDAAO,UAAU;oDAAO,YAAY;;;;;;8DACrD,6LAAC,0JAAA,CAAA,UAAe;oDACd,QAAQ;wDAAE,MAAM;oDAAoB;oDACpC,uBAAS,6LAAC,oIAAA,CAAA,sBAAmB;wDAAC,WAAU;;;;;;;;;;;8DAE1C,6LAAC,sJAAA,CAAA,MAAG;oDAAC,SAAQ;oDAAQ,MAAK;oDAAsB,QAAQ;wDAAC;wDAAG;wDAAG;wDAAG;qDAAE;;;;;;;;;;;;;;;;6DAIvE,6LAAC;wCAAI,WAAU;kDACb,cAAA,6LAAC;4CAAS,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAM/B,6LAAC,mIAAA,CAAA,OAAI;wBAAC,WAAU;;0CACd,6LAAC,mIAAA,CAAA,aAAU;;kDACT,6LAAC,mIAAA,CAAA,YAAS;kDAAC;;;;;;kDACX,6LAAC,mIAAA,CAAA,kBAAe;kDAAC;;;;;;;;;;;;0CAEnB,6LAAC,mIAAA,CAAA,cAAW;gCAAC,WAAU;0CACpB,cAAA,6LAAC,oIAAA,CAAA,iBAAc;oCAAC,QAAQ;oCAAa,WAAU;8CAC9C,cAAA,6LAAC,sKAAA,CAAA,sBAAmB;wCAAC,OAAM;wCAAO,QAAO;kDACvC,cAAA,6LAAC,uJAAA,CAAA,WAAQ;;8DACP,6LAAC,0JAAA,CAAA,UAAe;oDACd,QAAQ;wDAAE,MAAM;oDAAoB;oDACpC,uBAAS,6LAAC,oIAAA,CAAA,sBAAmB;wDAAC,WAAU;wDAAM,SAAQ;;;;;;;;;;;8DAExD,6LAAC,kJAAA,CAAA,MAAG;oDACF,MAAM;oDACN,SAAQ;oDACR,SAAQ;oDACR,IAAG;oDACH,IAAG;oDACH,aAAa;oDACb,WAAW;oDACX,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,WAAW,EAAE,WAAW,EAAE,OAAO,EAAE,IAAI,EAAE;wDACjE,MAAM,SAAS,KAAK,EAAE,GAAG;wDACzB,+FAA+F;wDAC/F,MAAM,SAAS,cAAc;wDAC7B,MAAM,IAAK,KAAK,SAAS,KAAK,GAAG,CAAC,CAAC,WAAW;wDAC9C,MAAM,IAAI,KAAM,SAAS,KAAK,GAAG,CAAC,CAAC,WAAW;wDAC9C,MAAM,aAAa,IAAI,KAAK,UAAU;wDAEtC,kEAAkE;wDAClE,MAAM,gBAAgB,WAAW,CAAC,KAAiC,EAAE,SAAS;wDAE9E,qBACE,6LAAC;4DAAK,GAAG;4DAAG,GAAG;4DAAG,MAAK;4DAAyB,YAAY;4DAAY,kBAAiB;4DAAU,UAAS;sEACzG,GAAG,cAAc,CAAC,EAAE,CAAC,UAAU,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;;;;;;oDAG1D;;;;;;8DAEF,6LAAC,oIAAA,CAAA,cAAW;oDAAC,uBAAS,6LAAC,oIAAA,CAAA,qBAAkB;wDAAC,SAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASpE;GAzJwB;KAAA;AA2JxB,+CAA+C;AAC/C,MAAM,WAAW,CAAC,EAAE,SAAS,EAA0B,iBACrD,6LAAC;QAAI,WAAW,CAAC,+BAA+B,EAAE,WAAW;;;;;;MADzD","debugId":null}}]
}